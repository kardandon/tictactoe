{"version":3,"sources":["nav.js","TicTacToe.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","style","float","href","className","Square","onClick","props","this","value","React","Component","Board","i","squares","renderSquare","calculateWinner","lines","length","a","b","c","TicTacToe","state","history","Array","fill","Xisnext","Xbot","Obot","setTimeout","go","setState","slice","move","minimax","l","splice","terminal","u","concat","board","isX","acts","push","action","new_board","player","win","utility","val","actions","max_value","result","min_value","flag","Math","floor","random","pl","best","cv","status","current","winner","display","alignItems","justifyContent","padding","class","buttonX","type","buttonO","Restart","Undo","handleClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.30604384.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './App.css';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Nav() {\r\n    return (\r\n       <nav>\r\n           <h3 style={{float: \"left\"}}><a href=\"https://kardandon.github.io\">Emre Küçükkaya </a></h3>\r\n           <ul className=\"nav-links\">\r\n               <li className=\"nav-links-list\"> <a href=\"https://github.com/kardandon\">About </a></li>\r\n           </ul>\r\n       </nav> \r\n    )\r\n}\r\n\r\nexport default Nav;","import React from \"react\";\r\nclass Square extends React.Component {\r\n    render() {\r\n        return (\r\n            <button className=\"square\"\r\n            onClick={() => this.props.onClick()}>\r\n                {this.props.value}\r\n            </button>\r\n        );\r\n    }\r\n}\r\nclass Board extends React.Component{\r\n    renderSquare(i){\r\n        return (\r\n            <Square value ={this.props.squares[i]}\r\n                onClick={() => this.props.onClick(i)}\r\n            />\r\n        );\r\n    }\r\n    render() {\r\n        return(\r\n            <div className=\"board\">\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(0)}\r\n                    {this.renderSquare(1)}\r\n                    {this.renderSquare(2)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(3)}\r\n                    {this.renderSquare(4)}\r\n                    {this.renderSquare(5)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(6)}\r\n                    {this.renderSquare(7)}\r\n                    {this.renderSquare(8)}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n    const lines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const [a, b, c] = lines[i];\r\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n        return squares[a];\r\n      }\r\n    }\r\n    return null;\r\n  }\r\nfunction min(a, b){\r\n    return a < b ? a : b;\r\n}\r\nfunction max(a, b){\r\n    return a > b ? a : b;\r\n}\r\nclass TicTacToe extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state ={\r\n            history:[{\r\n                squares: Array(9).fill(null)\r\n            }],\r\n            Xisnext: true,\r\n            Xbot: false,\r\n            Obot: false\r\n        };\r\n        \r\n    }\r\n    componentDidUpdate(){\r\n        setTimeout(() => {this.go();}, 500);\r\n    }\r\n    buttonX(){\r\n        this.setState({Xbot: !this.state.Xbot});\r\n        //this.go();\r\n    }\r\n    buttonO(){\r\n        this.setState({Obot: !this.state.Obot});\r\n        //this.go();\r\n    }\r\n    go(){\r\n        const history = this.state.history;\r\n        const current = history[history.length - 1];\r\n        const squares = current.squares.slice();\r\n        if(this.state.Xisnext && this.state.Xbot){\r\n            this.move(this.minimax(squares));\r\n            return;\r\n        }\r\n        else if(!this.state.Xisnext && this.state.Obot){\r\n            this.move(this.minimax(squares));\r\n            return;\r\n        }\r\n        return;\r\n    }\r\n    Restart(){\r\n        this.setState({\r\n            history:[{\r\n                squares: Array(9).fill(null)\r\n            }],\r\n            Xisnext: true\r\n        });\r\n    }\r\n    Undo(){\r\n        let l = this.state.Xbot == true || this.state.Obot == true ? 2 : 1;\r\n        const history = this.state.history;\r\n        if (history.length > l){\r\n        this.setState({\r\n            history:\r\n                history.splice(0,history.length - l)\r\n            ,\r\n            Xisnext: (l == 2 ? this.state.Xisnext : !this.state.Xisnext)\r\n        });\r\n        }\r\n    }\r\n    move(i){\r\n        const history = this.state.history;\r\n        const current = history[history.length - 1];\r\n        const squares = current.squares.slice();\r\n        if (this.terminal(squares) || squares[i]){\r\n            return;\r\n        }\r\n        let u = this.state.Xisnext;\r\n        squares[i] = u ? 'X' : 'O';\r\n        this.setState({\r\n            history: history.concat([{\r\n                squares: squares\r\n            }]),\r\n            Xisnext: !u,\r\n        });\r\n    }\r\n    handleClick(i){\r\n        if(!(this.state.Xisnext && this.state.Xbot) && !(!this.state.Xisnext && this.state.Obot)){\r\n        this.move(i);\r\n        this.go();\r\n        }\r\n    }\r\n    player(board){\r\n        let isX = false;\r\n        for (let i=0; i<9; i++)\r\n        {\r\n            if (board[i] == null)\r\n                isX = !isX;\r\n        }\r\n        if (isX) return 'X';\r\n        else return 'O';\r\n    }\r\n    actions(board){\r\n        let acts = [];\r\n        for (let i=0; i<9; i++)\r\n        {\r\n            if (board[i] == null)\r\n                acts.push(i);\r\n        }\r\n        return acts;\r\n    }\r\n    result(board, action)\r\n    {\r\n        if (board[action] != null)\r\n            return;\r\n        const new_board = board.slice();\r\n        new_board[action] = this.player(board);\r\n        return new_board;\r\n    }\r\n    terminal(board){\r\n        if (calculateWinner(board) != null) return true;\r\n        for (let i=0; i<9; i++)\r\n        {\r\n            if (board[i] == null)\r\n                return false;\r\n        }\r\n        return true;\r\n    }\r\n    utility(board){\r\n        let win = calculateWinner(board);\r\n        if (win == 'X')\r\n            return 1;\r\n        else if (win =='O')\r\n            return -1;\r\n        else\r\n            return 0;\r\n    }\r\n    min_value(board){\r\n        if(this.terminal(board)) return this.utility(board);\r\n        let val = 2;\r\n        const acts = this.actions(board);\r\n        for (let i=0; i < acts.length; i++)\r\n        {\r\n            val = min(val, this.max_value(this.result(board,acts[i])));\r\n            if (val == -1) break;\r\n        }\r\n        return val;\r\n    }\r\n    max_value(board){\r\n        if(this.terminal(board)) return this.utility(board);\r\n        let val = -2;\r\n        const acts = this.actions(board);\r\n        for (let i=0; i < acts.length; i++)\r\n        {\r\n            val = max(val, this.min_value(this.result(board,acts[i])));\r\n            if (val == 1) break;\r\n        }\r\n        return val;\r\n    }\r\n    minimax(board){\r\n        if (this.terminal(board)) return null;\r\n        let flag = true;\r\n        for (let i=0; i<9;i++){\r\n            if (board[i] != null){\r\n                flag = false;\r\n                break;\r\n            }\r\n        }\r\n        if (flag){\r\n            return Math.floor(Math.random() * 9);\r\n        }\r\n        const acts = this.actions(board);\r\n        const pl = this.player(board);\r\n        let best = acts[0];\r\n        if (pl == 'X'){\r\n            let val = -2;\r\n            for (let i = 0; i < acts.length; i++){\r\n                let cv = this.min_value(this.result(board, acts[i]));\r\n                if (val < cv){\r\n                    val = cv;\r\n                    best = acts[i];\r\n                }\r\n                if (val == 1) return best;\r\n            }\r\n        }\r\n        if (pl == 'O'){\r\n            let val = 2;\r\n            for (let i = 0; i < acts.length; i++){\r\n                let cv = this.max_value(this.result(board, acts[i]));\r\n                if (val > cv){\r\n                    val = cv;\r\n                    best = acts[i];\r\n                }\r\n                if (val == -1) return best;\r\n            }\r\n        }\r\n        return best;\r\n    }\r\n    render() {\r\n        const history = this.state.history;\r\n        const current = history[history.length -1];\r\n        const winner = calculateWinner(current.squares);\r\n        let status;\r\n        if (winner) {\r\n            status = \"Winner: \" + winner;\r\n        } \r\n        else if (this.terminal(current.squares)){\r\n            status = \"It's a draw!\";\r\n        } \r\n        else {\r\n            status = \"Next Player: \" + (this.state.Xisnext ? 'X' : 'O');\r\n        }\r\n        return (\r\n            <div>\r\n            <div style={{display: 'inline-flex', alignItems: 'center'}}>\r\n                <p style={{justifyContent: 'space-around', padding: '10px'}}> X is bot:</p>\r\n                <label class=\"switch\">\r\n                    <input onClick={() => this.buttonX()} type=\"checkbox\"/>\r\n                    <span class=\"slider round\"/>\r\n                </label>\r\n                <p style={{padding: '10px'}}> Y is bot:</p>\r\n                <label class=\"switch\">\r\n                    <input onClick={() => this.buttonO()} type=\"checkbox\"/>\r\n                    <span class=\"slider round\"/>\r\n                </label>\r\n            </div>\r\n            <div className=\"game-info\">\r\n                <h3>{status}</h3>\r\n                <button className=\"game-info-button\" onClick={() => this.Restart()}> Restart game</button>\r\n                <button className=\"game-info-button\" onClick={() => this.Undo()}> Undo </button>\r\n              </div>\r\n              <div className=\"game-board\">\r\n                <Board\r\n                  squares={current.squares}\r\n                  onClick={i => this.handleClick(i)}\r\n                />\r\n              </div>\r\n              \r\n            </div>\r\n          );\r\n    }\r\n}\r\nexport default TicTacToe;","import React from \"react\";\n//import {BrowserRouter as Router, Switch, Route, Link} from 'react-router-dom';\nimport Nav from \"./nav\";\nimport TicTacToe from \"./TicTacToe\"\nfunction App() {\n  return (\n    <div>\n      <Nav/>\n      <TicTacToe/>\n    </div>\n  );\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}